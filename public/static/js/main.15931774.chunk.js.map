{"version":3,"sources":["webpack:///./src/modules/WordDrag.less?8723","modules/WordDrag.less","reducers/index.js","lib/Store.js","actions/index.js","modules/Grid.js","modules/Scorecard.js","modules/WordDrag.js","modules/WordDragCreate.js","modules/Lobby.js","modules/WordDragController.js","index.js","App.js"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","initialState","baseUrl","error","grid","game","gameName","gameId","players","curPlayerName","gameStarted","playerWords","combineReducers","worddrag","state","arguments","length","action","type","_objectSpread","payload","_id","name","middlewares","thunkMiddleware","store","createStore","rootReducer","applyMiddleware","apply","storeGameDetails","storeCurrentPlayer","playerName","createGame","size","dispatch","getState","body","playerScore","isAdmin","axios","post","concat","then","response","serviceResponse","data","success","id","getGameDetails","catch","console","log","get","findGame","put","updatePlayer","updateCurrentPlayerScore","curPlayer","newScore","updateCurrentPlayerWords","words","startGame","scoring","Grid","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","dragStarted","draggedBoxes","draggedWord","dragMode","startBox","boxClicked","bind","_assertThisInitialized","boxHovered","renderGrid","checkRepetition","_createClass","key","value","word","_","dictionary","toLowerCase","ev","_this$state","this","_this$props","storeScore","playerInd","score","boxes","target","className","letter","textContent","checkWord","toast","position","autoClose","hideProgressBar","wordScore","split","forEach","toUpperCase","warn","setState","_this$state2","mode","currRow","currCol","indexOf","startRow","startCol","prevRow","prevCol","nextState","newBoxes","newWord","draggedLetter","pop","slice","_this$state3","gridDom","boxSelected","j","React","createElement","onClick","onMouseDown","onMouseUp","onMouseOver","Component","connect","bindActionCreators","Scorecard","_this2","setInterval","sortedPlayers","player","map","ind","style","WordDrag","storePlayerWords","timer","_this$props2","WordDragCreate","document","querySelector","Fragment","joinGame","Lobby","sampleGrid","line","char","String","fromCharCode","charCodeAt","marginLeft","href","WordDragController","App","Provider","ToastContainer","POSITION","TOP_CENTER","window","location","protocol","host","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.15931774.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"h1 {\\n  margin-top: 10px;\\n}\\nh3 {\\n  margin-block-start: auto;\\n  margin-block-end: auto;\\n  margin-top: 5px;\\n}\\nh4 {\\n  margin-block-start: auto;\\n  margin-block-end: auto;\\n  margin-top: 15px;\\n  margin-bottom: 10px;\\n}\\n.grid {\\n  border: 1px solid black;\\n  width: fit-content;\\n  margin: auto;\\n}\\n.grid .grid-box {\\n  display: inline-block;\\n  height: 30px;\\n  width: 30px;\\n  border: 1px solid black;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n.grid .grid-box :hover {\\n  background-color: red;\\n}\\n.grid .grid-box p {\\n  margin: 0px;\\n  padding: 5px;\\n}\\n.grid .selected {\\n  background-color: green;\\n}\\n#worddrag .words-list {\\n  margin-left: auto;\\n  margin-top: 10px;\\n}\\n#worddrag .scorecard {\\n  position: absolute;\\n  margin-left: 10px;\\n  top: 10px;\\n  display: block;\\n}\\n#worddrag .scorecard ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#worddrag .scorecard ul li {\\n  text-align: left;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#worddrag .scorecard ul li:not(:last-child) {\\n  border-bottom: 1px solid #dedede;\\n}\\n#worddrag .time-left {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  display: block;\\n}\\n#lobby .player-list {\\n  display: block;\\n}\\n#lobby .player-list ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#lobby .player-list ul li {\\n  text-align: center;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#lobby .instructions {\\n  display: block;\\n  margin-top: 20px;\\n}\\n#lobby .instructions .left {\\n  text-align: left;\\n}\\n#lobby .instructions ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  height: 100%;\\n}\\n#lobby .instructions ul li {\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#final-scorecard .player-list {\\n  display: block;\\n}\\n#final-scorecard .player-list ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#final-scorecard .player-list ul li {\\n  text-align: center;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#final-scorecard .player-list ul li:not(:last-child) {\\n  border-bottom: 1px solid #dedede;\\n}\\n.noselect {\\n  -webkit-touch-callout: none;\\n  /* iOS Safari */\\n  -webkit-user-select: none;\\n  /* Safari */\\n  -khtml-user-select: none;\\n  /* Konqueror HTML */\\n  -moz-user-select: none;\\n  /* Old versions of Firefox */\\n  -ms-user-select: none;\\n  /* Internet Explorer/Edge */\\n  user-select: none;\\n  /* Non-prefixed version, currently\\n                                    supported by Chrome, Opera and Firefox */\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { combineReducers } from 'redux';\n\nconst initialState = {\n  baseUrl: \"\",\n  error: null,\n  grid: [],\n  game: {},\n  gameName: \"\",\n  gameId: \"\",\n  players: [],\n  curPlayerName: \"\",\n  gameStarted: false,\n  playerWords: []\n};\n\nfunction worddrag(state = initialState, action) {\n  switch (action.type) {\n    case \"UPDATE_GAME\":\n      return {\n        ...state,\n        game: action.payload,\n        error: action.payload.error ? action.payload.error : null,\n        gameId: action.payload._id,\n        grid: action.payload.grid ? action.payload.grid : [],\n        gameName: action.payload.name ? action.payload.name : \"\",\n        players: action.payload.players ? action.payload.players : [],\n        gameStarted: action.payload.gameStarted ? action.payload.gameStarted : false\n      }\n    case \"UPDATE_GRID\":\n      return {\n        ...state,\n        grid: action.payload\n      }\n    case \"UPDATE_CURRENT_PLAYER\":\n      return {\n        ...state,\n        curPlayerName: action.payload\n      }\n    case \"UPDATE_PLAYER_WORDS\":\n      return {\n        ...state,\n        playerWords: action.payload\n      }\n    case \"UPDATE_BASE_URL\":\n      return {\n        ...state,\n        baseUrl: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  worddrag\n});\n","import thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst middlewares = [\n  thunkMiddleware,\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n  \tmiddlewares.push(logger);\n}\n\nlet store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import axios from 'axios';\n\nexport function storeGameDetails(game) {\n    return {\n        type: \"UPDATE_GAME\",\n        payload: game\n    }\n}\n\nexport function storeGrid(grid) {\n    return {\n        type: \"UPDATE_GRID\",\n        payload: grid\n    }\n}\n\nexport function updatePlayerWords(words) {\n    return {\n        type: \"UPDATE_PLAYER_WORDS\",\n        payload: words\n    }\n}\n\nexport function storeCurrentPlayer(playerName) {\n  return {\n      type: \"UPDATE_CURRENT_PLAYER\",\n      payload: playerName\n  }\n}\n\nexport function createGame(size, gameName, playerName) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n      \n      let players = [{\n        playerName: playerName,\n        playerScore: 0,\n        isAdmin: true\n      }] \n      let body = {\n          \"size\": size,\n          \"name\": gameName,\n          \"players\": players,\n          \"gameStarted\": false\n      }\n      axios.post(`${baseUrl}/api/game`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(storeCurrentPlayer(playerName))\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function getGameDetails(id) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n\n      axios.get(`${baseUrl}/api/game/${id}`)\n      .then(response => {\n          let serviceResponse = response.data;\n          dispatch(storeGameDetails(serviceResponse.data));\n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function findGame(gameName, playerName) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n\n      axios.get(`${baseUrl}/api/gameFromName/${gameName}`)\n      .then(response => {\n          let serviceResponse = response.data;\n          let players = serviceResponse.data.players;\n          players.push({playerName: playerName, playerScore: 0, isAdmin: false})\n          dispatch(updatePlayer(serviceResponse.data._id, players));\n          dispatch(storeCurrentPlayer(playerName))\n      }).catch(error => {\n          console.log(\"Error - \", error, typeof(error));\n          dispatch(storeGameDetails({error: error}));\n      });\n  };\n}\n\nexport function updatePlayer(id, players) {\n  return (dispatch, getState) => {  \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"players\": players\n      }\n      axios.put(`${baseUrl}/api/game/${id}`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function updateCurrentPlayerScore(id, curPlayer, newScore) {\n  return (dispatch, getState) => {     \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"curPlayer\": curPlayer,\n          \"newPlayerScore\": newScore\n      }\n      axios.put(`${baseUrl}/api/game/${id}/updatePlayerDetails`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function updateCurrentPlayerWords(id, curPlayer, words) {\n  return (dispatch, getState) => {     \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"curPlayer\": curPlayer,\n          \"words\": words\n      }\n      axios.put(`${baseUrl}/api/game/${id}/updatePlayerDetails`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function startGame(id) {\n  return (dispatch, getState) => {    \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"gameStarted\": true\n      }\n      axios.put(`${baseUrl}/api/game/${id}`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport store from '../lib/Store';\nimport { bindActionCreators } from 'redux';\nimport { toast } from 'react-toastify';\nimport * as _ from 'underscore';\nimport './WordDrag.less';\nimport dictionary from '../lib/FullDictionary.json';\nimport {updateCurrentPlayerScore, updatePlayerWords} from '../actions'\n\n// let grid = [];\nlet scoring = {'A': 1, 'B': 3, 'C': 3, 'D': 2, 'E': 1, 'F': 4, 'G': 2, 'H': 4, 'I': 1, 'J': 8, 'K': 5, 'L': 1, 'M': 3, 'N': 1, 'O': 1, 'P': 2, 'Q': 10, 'R': 1, 'S': 1, 'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8, 'Y': 4, 'Z': 10}\n\nexport class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragStarted: false,\n      draggedBoxes: [],\n      draggedWord: '',\n      dragMode: '',\n      startBox: ''\n    };\n    this.boxClicked = this.boxClicked.bind(this);\n    this.boxHovered = this.boxHovered.bind(this);\n    this.renderGrid = this.renderGrid.bind(this);\n    this.checkRepetition = this.checkRepetition.bind(this);\n  }\n\n  checkWord(word) {\n    return _.indexOf(dictionary, word.toLowerCase()) !== -1 ? true : false;\n  }\n\n  boxClicked(ev) {\n    let {draggedWord, dragStarted} = this.state;\n    let {gameId, players, curPlayerName, playerWords, storeScore} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n    let score = playerInd !== -1 ? players[playerInd].playerScore : -1;\n\n    let boxes = this.state.draggedBoxes;\n    boxes.push(ev.target.className);\n    let letter = ev.target.textContent;\n    let startBox = ev.target.className;\n    \n    if(dragStarted === true) {\n      if(draggedWord.length >= 3) {\n        if(_.indexOf(playerWords, draggedWord) === -1 && this.checkWord(draggedWord)) {\n          toast.success(\"Correct word: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n          if(storeScore) {\n            playerWords.push(draggedWord);\n            let wordScore = 0;\n            draggedWord.split('').forEach((letter) => {\n                wordScore += scoring[letter.toUpperCase()];\n            });\n            let newScore = score + wordScore;\n            this.props.updateCurrentPlayerScore(gameId, players[playerInd], newScore);\n          }\n        }\n        else if(_.indexOf(playerWords, draggedWord) !== -1) {\n          toast.warn(\"Word already found: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n        }\n        else {\n          toast.error(\"Incorrect word: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n        }\n      }\n      boxes = [];\n      letter = '';\n      startBox = '';\n    }\n    this.setState({ draggedBoxes: boxes, dragStarted: !this.state.dragStarted, draggedWord: letter, startBox: startBox });\n    storeScore && store.dispatch(updatePlayerWords(playerWords));\n  }\n\n  boxHovered(ev) {\n    let {dragStarted, draggedBoxes, draggedWord, startBox, mode} = this.state;\n    let currRow = ev.target.className.split('-')[1], currCol = ev.target.className.split('-')[2];\n    let boxes = draggedBoxes;\n\n    if(dragStarted && ev.target.className.indexOf(\" \") === -1) {\n      if(startBox && startBox !== '') {\n        let startRow = startBox.split('-')[1], startCol = startBox.split('-')[2];\n        if(startRow === currRow)\n          mode = 'horizontal';\n        else if(startCol === currCol)\n          mode = 'vertical';\n        startBox = '';\n        boxes.push(ev.target.className);\n        draggedWord += ev.target.textContent;\n        this.setState({ draggedBoxes: boxes, draggedWord: draggedWord, startBox: startBox, mode: mode });\n        return;\n      }\n\n      let prevRow = boxes[boxes.length - 1].split('-')[1], prevCol = boxes[boxes.length - 1].split('-')[2];\n      if((mode === 'horizontal' && prevRow === currRow) || (mode === 'vertical' && prevCol === currCol)) {\n        let nextState = this.checkRepetition(boxes, ev.target.className, draggedWord, ev.target.textContent);\n        boxes = nextState.newBoxes;\n        draggedWord = nextState.newWord;\n        this.setState({ draggedBoxes: boxes, draggedWord: draggedWord });\n      }\n      else {\n        this.setState({ draggedBoxes: [], draggedWord: '', dragStarted: false });\n      }\n    }\n  }\n\n  checkRepetition(boxes, className, word, draggedLetter) {\n    let newBoxes = boxes, newWord = word;\n    if(_.indexOf(boxes, className) === -1) {\n      newBoxes.push(className);\n      newWord += draggedLetter;\n    }\n    else {\n      newBoxes.pop();\n      newWord = newWord.slice(0, -1); \n    }\n    return {\n      newBoxes: newBoxes,\n      newWord: newWord\n    }\n  }\n\n  renderGrid(grid) {\n    const {dragStarted, draggedBoxes} = this.state;\n    let gridDom = [];\n    let boxSelected = false;\n\n    for(let i=0;i<grid.length;i++) {\n      for(let j=0;j<grid[i].length;j++) {\n        boxSelected = (dragStarted && _.indexOf(draggedBoxes, 'box-' + (i+1) + '-' + (j+1)) > -1) ? true : false;\n        gridDom.push(\n          <div\n            className={`grid-box box-${i+1}-${j+1} ${boxSelected && 'selected'}`}\n            onClick={this.boxClicked}\n            onMouseDown={this.boxClicked}\n            onMouseUp={this.boxClicked}\n            onMouseOver={this.boxHovered}>\n              <p className={`box-${i+1}-${j+1}`}>{grid[i][j].toUpperCase()}</p>\n          </div>);\n      }\n      gridDom.push(<br />);\n    }\n    return gridDom;\n  }\n\n  render() {\n    const {grid} = this.props;\n    \n    return (\n        <div className=\"grid noselect\">\n          {\n            grid && grid.length > 0 && this.renderGrid(grid)\n          }\n        </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players,\n    playerWords: state.worddrag.playerWords\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateCurrentPlayerScore\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Grid);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport {startGame, getGameDetails} from '../actions'\nimport './WordDrag.less';\nimport { Grid } from './Grid';\n\nexport class Scorecard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n    }, 1000)\n  }\n\n  render() {\n    const {players, gameName, grid} = this.props;\n    let sortedPlayers = _.sortBy(players, function(player){ return -1*player.playerScore });\n\n    return (\n      <div id=\"final-scorecard\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <div className=\"player-list\">\n          <h3>Final Scorecard: </h3>\n          <ul>\n          {\n            sortedPlayers.length > 0 &&\n            sortedPlayers.map((player) => {\n                return (\n                  <li>\n                    <b>{player.playerName} {player.isAdmin && ` (Admin)`} - {player.playerScore}</b>\n                    <br />\n                    Words found:&nbsp;\n                    {\n                      player.playerWords && player.playerWords.length > 0 && player.playerWords.map((word, ind) => {\n                        if(ind === player.playerWords.length - 1)\n                          return word;\n                        return word + \", \"\n                      })\n                    }\n                  </li>\n                )\n            })\n          }\n          </ul>\n        </div>\n        <h3 style={{\"margin\": \"10px 0px\"}}>Grid:</h3>\n        {\n          grid && grid.length > 0 && \n          <div style={{\"marginBottom\": \"10px\"}}>\n            <Grid grid={grid} storeScore={false} />\n          </div>\n        }\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    startGame,\n    getGameDetails\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Scorecard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport './WordDrag.less';\nimport {updateCurrentPlayerScore, getGameDetails, updateCurrentPlayerWords} from '../actions'\nimport Scorecard from './Scorecard';\nimport Grid from './Grid';\n\nexport class WordDrag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.storePlayerWords = this.storePlayerWords.bind(this);\n\n    this.timer = 120;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n      this.timer--;\n    }, 1000)\n  }\n\n  storePlayerWords() {\n    let {gameId, players, curPlayerName, playerWords} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n\n    this.props.updateCurrentPlayerWords(gameId, players[playerInd], playerWords);\n  }\n\n  render() {\n    const {grid, gameName, curPlayerName, players, playerWords} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n    let score = playerInd !== -1 ? players[playerInd].playerScore : -1;\n    let sortedPlayers = _.sortBy(players, function(player){ return -1*player.playerScore });\n\n    if(this.timer === 0) {\n      this.storePlayerWords();\n    }\n\n    return (\n      this.timer && this.timer < 0 ? \n      <Scorecard /> :\n      <div id=\"worddrag\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <h3>Player Name: {curPlayerName}</h3>\n        <h4>Score: {score}</h4>\n        {\n          grid && grid.length > 0 && \n          <Grid grid={grid} storeScore={true} />\n        }\n        {\n          playerWords.length > 0 &&\n          <div className=\"words-list\">\n            <p>\n              <b>Words:&nbsp;</b>\n              {playerWords.length && playerWords.map((word, ind) => {\n                if(ind === playerWords.length - 1)\n                  return word;\n                return word + \", \"\n              })}\n            </p>\n          </div>\n        }\n        <div className=\"scorecard\">\n          <h3>Scorecard</h3>\n          <ul>\n          {\n            sortedPlayers.length > 0 &&\n            sortedPlayers.map((player) => {\n              return <li>{player.playerName} - {player.playerScore}</li>\n            })\n          }\n          </ul>\n        </div>\n        <div className=\"time-left\">\n          <h3>Time remaining: {this.timer}s</h3>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players,\n    playerWords: state.worddrag.playerWords\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateCurrentPlayerScore,\n    getGameDetails,\n    updateCurrentPlayerWords\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDrag);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './WordDrag.less';\nimport {createGame, findGame} from '../actions'\n\nexport class WordDragCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  createGame(size) {\n    let gameName = document.querySelector('#create-game-name').value\n    let playerName = document.querySelector('#create-game-player').value\n    this.props.createGame(size, gameName, playerName);\n  }\n\n  joinGame() {\n    let gameName = document.querySelector('#join-game-name').value\n    let playerName = document.querySelector('#join-game-player').value\n    this.props.findGame(gameName, playerName);\n  }\n\n  render() {\n    let {error} = this.props;\n\n    return (\n      <React.Fragment>\n        <h1>Word Drag</h1>\n        <div id=\"create-game\">\n          <h3>Create Game</h3>\n          Enter game name: <input id=\"create-game-name\"></input>\n          <br />Enter player name: <input id=\"create-game-player\"></input>\n          <br />\n          <button onClick={() => this.createGame(20)}>Create Game</button>\n        </div>\n        <br />\n        <br />\n        <div id=\"join-game\">\n          <h3>Join Game</h3>\n          Enter game name: <input id=\"join-game-name\"></input>\n          <br />Enter player name: <input id=\"join-game-player\"></input>\n          <br />\n          <button onClick={() => this.joinGame()}>Join Game</button>\n        </div>\n        {\n          error &&\n          <div id=\"game-error\">\n            <p style={{\"color\": \"red\"}}>Game Not Found!</p>\n          </div>\n        }\n        {/* <form className=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" />\n          </div>\n          <div class=\"form-group form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n            <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        </form> */}\n      </React.Fragment>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.worddrag.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createGame,\n    findGame\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDragCreate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport {startGame, getGameDetails} from '../actions'\nimport './WordDrag.less';\nimport { Grid } from './Grid';\n\nexport class Lobby extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.startGame = this.startGame.bind(this);\n\n    this.sampleGrid = []\n  }\n\n  componentDidMount() {\n    this.sampleGrid = [\n      ['.', 'S', '.', '.', '.'],\n      ['.', 'W', 'E', 'R', 'E'],\n      ['.', 'O', '.', 'A', '.'],\n      ['D', 'R', 'A', 'G', '.'],\n      ['.', 'D', '.', 'E', '.']\n    ]\n    this.sampleGrid.forEach((line) => {\n      line.forEach((char, ind) => {\n        if(char === '.') {\n          line[ind] = (String.fromCharCode('A'.charCodeAt() + _.random(0, 25)));\n        }\n      })\n    })\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n    }, 1000)\n  }\n\n  startGame() {\n    this.props.startGame(this.props.gameId);\n  }\n\n  render() {\n    const {players, gameName, curPlayerName} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n\n    return (\n      <div id=\"lobby\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <div className=\"player-list\">\n          <h3>Players joined: </h3>\n          <ul>\n          {\n            players.length > 0 &&\n            players.map((player) => {\n              return <li>{player.playerName} {player.isAdmin && ` (Admin)`}</li>\n            })\n          }\n          </ul>\n        </div>\n        {\n          players[playerInd].isAdmin === true\n          ? <button onClick={this.startGame}>Start Game</button>\n          : <h3>Wait for admin to start the game!</h3>\n        }\n        <hr />\n        <div className=\"col-md-12 instructions\">\n          <div className=\"col-md-7 left\">\n            <h3>How to play: </h3>\n            <ul>\n              <li>Once game starts, a <b>20x20</b> grid of letters will be displayed</li>\n              <li>Drag the letters to find words</li>\n              <li>There are 2 ways to drag letters to form words:\n                <ul style={{marginLeft: \"10px\"}}>\n                  <li>Start dragging from first letter and stop at last letter</li>\n                  <li>Click on first letter, move the cursor to last letter and click on last letter (recommended)</li>\n                </ul>\n                Try it on the sample grid on the right\n              </li>\n              <li><a href='https://en.wikipedia.org/wiki/Scrabble_letter_distributions' target='_blank'>Scrabble letter scores</a> will be used for calculating the score for each word found</li>\n              <li>Try to score the maximum points in <b>120 seconds</b>!!</li>\n            </ul>\n          </div>\n          <div className=\"col-md-5 right\">\n            <h3>Sample grid: </h3>\n            {\n              this.sampleGrid && this.sampleGrid.length > 0 && \n              <div style={{\"margin\": \"10px auto\"}}>\n                <Grid grid={this.sampleGrid} storeScore={false} />\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    startGame,\n    getGameDetails\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Lobby);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './WordDrag.less';\nimport WordDrag from './WordDrag';\nimport WordDragCreate from './WordDragCreate';\nimport Lobby from './Lobby';\n\nexport class WordDragController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {grid, gameStarted} = this.props;\n\n    return (\n      <div id=\"worddrag-game\">\n        {\n          (grid && grid.length > 0) ?\n          (gameStarted ? <WordDrag /> : <Lobby />) :\n          <WordDragCreate />\n        }\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameStarted: state.worddrag.gameStarted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({},\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDragController);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './lib/Store';\n\nconst is_dev = process.env.NODE_ENV === 'development';\nlet baseUrl = '';\nbaseUrl = is_dev ? `http://localhost:4000` : `${window.location.protocol}//${window.location.host}`;\n\nReactDOM.render(\n    <Provider store={store}>\n         <App baseUrl={baseUrl} />\n    </Provider>, \n    document.getElementById('root')\n)\n","import React, {Component} from 'react';\nimport { Provider } from 'react-redux';\nimport store from './lib/Store';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport WordDragController from './modules/WordDragController';\n\nclass App extends Component {\n  componentWillMount() {\n    store.dispatch({\n      type: \"UPDATE_BASE_URL\",\n      payload: this.props.baseUrl\n    })\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <ToastContainer\n          className=\"ewp-toast-container\"\n          position={toast.POSITION.TOP_CENTER}\n        />\n        <div className=\"App\">\n          <WordDragController />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}