{"version":3,"sources":["webpack:///./src/modules/WordDrag.less?8723","modules/WordDrag.less","reducers/index.js","lib/Store.js","actions/index.js","modules/Grid.js","modules/Scorecard.js","modules/WordDrag.js","modules/WordDragCreate.js","modules/Lobby.js","modules/WordDragController.js","index.js","App.js"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","initialState","baseUrl","error","grid","game","gameName","gameId","players","curPlayerName","gameStarted","playerWords","combineReducers","worddrag","state","action","type","payload","_id","name","middlewares","thunkMiddleware","store","createStore","rootReducer","applyMiddleware","storeGameDetails","storeCurrentPlayer","playerName","createGame","size","dispatch","getState","body","playerScore","isAdmin","axios","post","then","response","serviceResponse","data","success","id","getGameDetails","catch","console","log","get","findGame","put","updatePlayer","updateCurrentPlayerScore","curPlayer","newScore","updateCurrentPlayerWords","words","startGame","scoring","Grid","props","dragStarted","draggedBoxes","draggedWord","dragMode","startBox","boxClicked","bind","boxHovered","renderGrid","checkRepetition","word","_","dictionary","toLowerCase","ev","this","storeScore","playerInd","score","boxes","target","className","letter","textContent","length","checkWord","toast","position","autoClose","hideProgressBar","wordScore","split","forEach","toUpperCase","warn","setState","mode","currRow","currCol","indexOf","startRow","startCol","prevRow","prevCol","nextState","newBoxes","newWord","draggedLetter","pop","slice","gridDom","boxSelected","j","onClick","onMouseDown","onMouseUp","onMouseOver","Component","connect","bindActionCreators","Scorecard","setInterval","sortedPlayers","player","map","ind","style","WordDrag","storePlayerWords","timer","WordDragCreate","document","querySelector","value","Fragment","joinGame","Lobby","sampleGrid","line","char","String","fromCharCode","charCodeAt","marginLeft","href","WordDragController","App","POSITION","TOP_CENTER","window","location","protocol","host","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.94c91ea7.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./WordDrag.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"h1 {\\n  margin-top: 10px;\\n}\\nh3 {\\n  margin-block-start: auto;\\n  margin-block-end: auto;\\n  margin-top: 5px;\\n}\\nh4 {\\n  margin-block-start: auto;\\n  margin-block-end: auto;\\n  margin-top: 15px;\\n  margin-bottom: 10px;\\n}\\n.grid {\\n  border: 1px solid black;\\n  width: fit-content;\\n  margin: auto;\\n}\\n.grid .grid-box {\\n  display: inline-block;\\n  height: 30px;\\n  width: 30px;\\n  border: 1px solid black;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n.grid .grid-box :hover {\\n  background-color: red;\\n}\\n.grid .grid-box p {\\n  margin: 0px;\\n  padding: 5px;\\n}\\n.grid .selected {\\n  background-color: green;\\n}\\n#worddrag .words-list {\\n  margin-left: auto;\\n  margin-top: 10px;\\n}\\n#worddrag .scorecard {\\n  position: absolute;\\n  margin-left: 10px;\\n  top: 10px;\\n  display: block;\\n}\\n#worddrag .scorecard ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#worddrag .scorecard ul li {\\n  text-align: left;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#worddrag .scorecard ul li:not(:last-child) {\\n  border-bottom: 1px solid #dedede;\\n}\\n#worddrag .time-left {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  display: block;\\n}\\n#lobby .player-list {\\n  display: block;\\n}\\n#lobby .player-list ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#lobby .player-list ul li {\\n  text-align: center;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#lobby .instructions {\\n  display: block;\\n  margin-top: 20px;\\n}\\n#lobby .instructions .left {\\n  text-align: left;\\n}\\n#lobby .instructions ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  height: 100%;\\n}\\n#lobby .instructions ul li {\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#final-scorecard .player-list {\\n  display: block;\\n}\\n#final-scorecard .player-list ul {\\n  padding: 0;\\n  list-style-type: none;\\n  margin: 5px 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n#final-scorecard .player-list ul li {\\n  text-align: center;\\n  padding: 5px;\\n  overflow: auto;\\n}\\n#final-scorecard .player-list ul li:not(:last-child) {\\n  border-bottom: 1px solid #dedede;\\n}\\n.noselect {\\n  -webkit-touch-callout: none;\\n  /* iOS Safari */\\n  -webkit-user-select: none;\\n  /* Safari */\\n  -khtml-user-select: none;\\n  /* Konqueror HTML */\\n  -moz-user-select: none;\\n  /* Old versions of Firefox */\\n  -ms-user-select: none;\\n  /* Internet Explorer/Edge */\\n  user-select: none;\\n  /* Non-prefixed version, currently\\n                                    supported by Chrome, Opera and Firefox */\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { combineReducers } from 'redux';\n\nconst initialState = {\n  baseUrl: \"\",\n  error: null,\n  grid: [],\n  game: {},\n  gameName: \"\",\n  gameId: \"\",\n  players: [],\n  curPlayerName: \"\",\n  gameStarted: false,\n  playerWords: []\n};\n\nfunction worddrag(state = initialState, action) {\n  switch (action.type) {\n    case \"UPDATE_GAME\":\n      return {\n        ...state,\n        game: action.payload,\n        error: action.payload.error ? action.payload.error : null,\n        gameId: action.payload._id,\n        grid: action.payload.grid ? action.payload.grid : [],\n        gameName: action.payload.name ? action.payload.name : \"\",\n        players: action.payload.players ? action.payload.players : [],\n        gameStarted: action.payload.gameStarted ? action.payload.gameStarted : false\n      }\n    case \"UPDATE_GRID\":\n      return {\n        ...state,\n        grid: action.payload\n      }\n    case \"UPDATE_CURRENT_PLAYER\":\n      return {\n        ...state,\n        curPlayerName: action.payload\n      }\n    case \"UPDATE_PLAYER_WORDS\":\n      return {\n        ...state,\n        playerWords: action.payload\n      }\n    case \"UPDATE_BASE_URL\":\n      return {\n        ...state,\n        baseUrl: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  worddrag\n});\n","import thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst middlewares = [\n  thunkMiddleware,\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n  \tmiddlewares.push(logger);\n}\n\nlet store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import axios from 'axios';\n\nexport function storeGameDetails(game) {\n    return {\n        type: \"UPDATE_GAME\",\n        payload: game\n    }\n}\n\nexport function storeGrid(grid) {\n    return {\n        type: \"UPDATE_GRID\",\n        payload: grid\n    }\n}\n\nexport function updatePlayerWords(words) {\n    return {\n        type: \"UPDATE_PLAYER_WORDS\",\n        payload: words\n    }\n}\n\nexport function storeCurrentPlayer(playerName) {\n  return {\n      type: \"UPDATE_CURRENT_PLAYER\",\n      payload: playerName\n  }\n}\n\nexport function createGame(size, gameName, playerName) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n      \n      let players = [{\n        playerName: playerName,\n        playerScore: 0,\n        isAdmin: true\n      }] \n      let body = {\n          \"size\": size,\n          \"name\": gameName,\n          \"players\": players,\n          \"gameStarted\": false\n      }\n      axios.post(`${baseUrl}/api/game`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(storeCurrentPlayer(playerName))\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function getGameDetails(id) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n\n      axios.get(`${baseUrl}/api/game/${id}`)\n      .then(response => {\n          let serviceResponse = response.data;\n          dispatch(storeGameDetails(serviceResponse.data));\n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function findGame(gameName, playerName) {\n  return (dispatch, getState) => {\n      let { baseUrl } = getState().worddrag;\n\n      axios.get(`${baseUrl}/api/gameFromName/${gameName}`)\n      .then(response => {\n          let serviceResponse = response.data;\n          let players = serviceResponse.data.players;\n          players.push({playerName: playerName, playerScore: 0, isAdmin: false})\n          dispatch(updatePlayer(serviceResponse.data._id, players));\n          dispatch(storeCurrentPlayer(playerName))\n      }).catch(error => {\n          console.log(\"Error - \", error, typeof(error));\n          dispatch(storeGameDetails({error: error}));\n      });\n  };\n}\n\nexport function updatePlayer(id, players) {\n  return (dispatch, getState) => {  \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"players\": players\n      }\n      axios.put(`${baseUrl}/api/game/${id}`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function updateCurrentPlayerScore(id, curPlayer, newScore) {\n  return (dispatch, getState) => {     \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"curPlayer\": curPlayer,\n          \"newPlayerScore\": newScore\n      }\n      axios.put(`${baseUrl}/api/game/${id}/updatePlayerDetails`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function updateCurrentPlayerWords(id, curPlayer, words) {\n  return (dispatch, getState) => {     \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"curPlayer\": curPlayer,\n          \"words\": words\n      }\n      axios.put(`${baseUrl}/api/game/${id}/updatePlayerDetails`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}\n\nexport function startGame(id) {\n  return (dispatch, getState) => {    \n      let { baseUrl } = getState().worddrag;\n\n      let body = {\n          \"gameStarted\": true\n      }\n      axios.put(`${baseUrl}/api/game/${id}`, body)\n      .then(response => {\n          let serviceResponse = response.data;\n          if(serviceResponse.success) {\n                let gameId = serviceResponse.id;\n                dispatch(getGameDetails(gameId));\n          }\n          \n      }).catch(error => {\n          console.log(\"Error - \", error);\n      });\n  };\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport store from '../lib/Store';\nimport { bindActionCreators } from 'redux';\nimport { toast } from 'react-toastify';\nimport * as _ from 'underscore';\nimport './WordDrag.less';\nimport dictionary from '../lib/FullDictionary.json';\nimport {updateCurrentPlayerScore, updatePlayerWords} from '../actions'\n\n// let grid = [];\nlet scoring = {'A': 1, 'B': 3, 'C': 3, 'D': 2, 'E': 1, 'F': 4, 'G': 2, 'H': 4, 'I': 1, 'J': 8, 'K': 5, 'L': 1, 'M': 3, 'N': 1, 'O': 1, 'P': 2, 'Q': 10, 'R': 1, 'S': 1, 'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8, 'Y': 4, 'Z': 10}\n\nexport class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragStarted: false,\n      draggedBoxes: [],\n      draggedWord: '',\n      dragMode: '',\n      startBox: ''\n    };\n    this.boxClicked = this.boxClicked.bind(this);\n    this.boxHovered = this.boxHovered.bind(this);\n    this.renderGrid = this.renderGrid.bind(this);\n    this.checkRepetition = this.checkRepetition.bind(this);\n  }\n\n  checkWord(word) {\n    return _.indexOf(dictionary, word.toLowerCase()) !== -1 ? true : false;\n  }\n\n  boxClicked(ev) {\n    let {draggedWord, dragStarted} = this.state;\n    let {gameId, players, curPlayerName, playerWords, storeScore} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n    let score = playerInd !== -1 ? players[playerInd].playerScore : -1;\n\n    let boxes = this.state.draggedBoxes;\n    boxes.push(ev.target.className);\n    let letter = ev.target.textContent;\n    let startBox = ev.target.className;\n    \n    if(dragStarted === true) {\n      if(draggedWord.length >= 3) {\n        if(_.indexOf(playerWords, draggedWord) === -1 && this.checkWord(draggedWord)) {\n          toast.success(\"Correct word: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n          if(storeScore) {\n            playerWords.push(draggedWord);\n            let wordScore = 0;\n            draggedWord.split('').forEach((letter) => {\n                wordScore += scoring[letter.toUpperCase()];\n            });\n            let newScore = score + wordScore;\n            this.props.updateCurrentPlayerScore(gameId, players[playerInd], newScore);\n          }\n        }\n        else if(_.indexOf(playerWords, draggedWord) !== -1) {\n          toast.warn(\"Word already found: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n        }\n        else {\n          toast.error(\"Incorrect word: \" + draggedWord, {\n            position: \"top-center\",\n            autoClose: 1000,\n            hideProgressBar: true\n          });\n        }\n      }\n      boxes = [];\n      letter = '';\n      startBox = '';\n    }\n    this.setState({ draggedBoxes: boxes, dragStarted: !this.state.dragStarted, draggedWord: letter, startBox: startBox });\n    storeScore && store.dispatch(updatePlayerWords(playerWords));\n  }\n\n  boxHovered(ev) {\n    let {dragStarted, draggedBoxes, draggedWord, startBox, mode} = this.state;\n    let currRow = ev.target.className.split('-')[1], currCol = ev.target.className.split('-')[2];\n    let boxes = draggedBoxes;\n\n    if(dragStarted && ev.target.className.indexOf(\" \") === -1) {\n      if(startBox && startBox !== '') {\n        let startRow = startBox.split('-')[1], startCol = startBox.split('-')[2];\n        if(startRow === currRow)\n          mode = 'horizontal';\n        else if(startCol === currCol)\n          mode = 'vertical';\n        startBox = '';\n        boxes.push(ev.target.className);\n        draggedWord += ev.target.textContent;\n        this.setState({ draggedBoxes: boxes, draggedWord: draggedWord, startBox: startBox, mode: mode });\n        return;\n      }\n\n      let prevRow = boxes[boxes.length - 1].split('-')[1], prevCol = boxes[boxes.length - 1].split('-')[2];\n      if((mode === 'horizontal' && prevRow === currRow) || (mode === 'vertical' && prevCol === currCol)) {\n        let nextState = this.checkRepetition(boxes, ev.target.className, draggedWord, ev.target.textContent);\n        boxes = nextState.newBoxes;\n        draggedWord = nextState.newWord;\n        this.setState({ draggedBoxes: boxes, draggedWord: draggedWord });\n      }\n      else {\n        this.setState({ draggedBoxes: [], draggedWord: '', dragStarted: false });\n      }\n    }\n  }\n\n  checkRepetition(boxes, className, word, draggedLetter) {\n    let newBoxes = boxes, newWord = word;\n    if(_.indexOf(boxes, className) === -1) {\n      newBoxes.push(className);\n      newWord += draggedLetter;\n    }\n    else {\n      newBoxes.pop();\n      newWord = newWord.slice(0, -1); \n    }\n    return {\n      newBoxes: newBoxes,\n      newWord: newWord\n    }\n  }\n\n  renderGrid(grid) {\n    const {dragStarted, draggedBoxes} = this.state;\n    let gridDom = [];\n    let boxSelected = false;\n\n    for(let i=0;i<grid.length;i++) {\n      for(let j=0;j<grid[i].length;j++) {\n        boxSelected = (dragStarted && _.indexOf(draggedBoxes, 'box-' + (i+1) + '-' + (j+1)) > -1) ? true : false;\n        gridDom.push(\n          <div\n            className={`grid-box box-${i+1}-${j+1} ${boxSelected && 'selected'}`}\n            onClick={this.boxClicked}\n            onMouseDown={this.boxClicked}\n            onMouseUp={this.boxClicked}\n            onMouseOver={this.boxHovered}>\n              <p className={`box-${i+1}-${j+1}`}>{grid[i][j].toUpperCase()}</p>\n          </div>);\n      }\n      gridDom.push(<br />);\n    }\n    return gridDom;\n  }\n\n  render() {\n    const {grid} = this.props;\n    \n    return (\n        <div className=\"grid noselect\">\n          {\n            grid && grid.length > 0 && this.renderGrid(grid)\n          }\n        </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players,\n    playerWords: state.worddrag.playerWords\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateCurrentPlayerScore\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Grid);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport {startGame, getGameDetails} from '../actions'\nimport './WordDrag.less';\nimport { Grid } from './Grid';\n\nexport class Scorecard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n    }, 1000)\n  }\n\n  render() {\n    const {players, gameName, grid} = this.props;\n    let sortedPlayers = _.sortBy(players, function(player){ return -1*player.playerScore });\n\n    return (\n      <div id=\"final-scorecard\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <div className=\"player-list\">\n          <h3>Final Scorecard: </h3>\n          <ul>\n          {\n            sortedPlayers.length > 0 &&\n            sortedPlayers.map((player) => {\n                return (\n                  <li>\n                    <b>{player.playerName} {player.isAdmin && ` (Admin)`} - {player.playerScore}</b>\n                    <br />\n                    Words found:&nbsp;\n                    {\n                      player.playerWords && player.playerWords.length > 0 && player.playerWords.map((word, ind) => {\n                        if(ind === player.playerWords.length - 1)\n                          return word;\n                        return word + \", \"\n                      })\n                    }\n                  </li>\n                )\n            })\n          }\n          </ul>\n        </div>\n        <h3 style={{\"margin\": \"10px 0px\"}}>Grid:</h3>\n        {\n          grid && grid.length > 0 && \n          <div style={{\"marginBottom\": \"10px\"}}>\n            <Grid grid={grid} storeScore={false} />\n          </div>\n        }\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    startGame,\n    getGameDetails\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Scorecard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport './WordDrag.less';\nimport {updateCurrentPlayerScore, getGameDetails, updateCurrentPlayerWords} from '../actions'\nimport Scorecard from './Scorecard';\nimport Grid from './Grid';\n\nexport class WordDrag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.storePlayerWords = this.storePlayerWords.bind(this);\n\n    this.timer = 120;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n      this.timer--;\n    }, 1000)\n  }\n\n  storePlayerWords() {\n    let {gameId, players, curPlayerName, playerWords} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n\n    this.props.updateCurrentPlayerWords(gameId, players[playerInd], playerWords);\n  }\n\n  render() {\n    const {grid, gameName, curPlayerName, players, playerWords} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n    let score = playerInd !== -1 ? players[playerInd].playerScore : -1;\n    let sortedPlayers = _.sortBy(players, function(player){ return -1*player.playerScore });\n\n    if(this.timer === 0) {\n      this.storePlayerWords();\n    }\n\n    return (\n      this.timer && this.timer < 0 ? \n      <Scorecard /> :\n      <div id=\"worddrag\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <h3>Player Name: {curPlayerName}</h3>\n        <h4>Score: {score}</h4>\n        {\n          grid && grid.length > 0 && \n          <Grid grid={grid} storeScore={true} />\n        }\n        {\n          playerWords.length > 0 &&\n          <div className=\"words-list\">\n            <p>\n              <b>Words:&nbsp;</b>\n              {playerWords.length && playerWords.map((word, ind) => {\n                if(ind === playerWords.length - 1)\n                  return word;\n                return word + \", \"\n              })}\n            </p>\n          </div>\n        }\n        <div className=\"scorecard\">\n          <h3>Scorecard</h3>\n          <ul>\n          {\n            sortedPlayers.length > 0 &&\n            sortedPlayers.map((player) => {\n              return <li>{player.playerName} - {player.playerScore}</li>\n            })\n          }\n          </ul>\n        </div>\n        <div className=\"time-left\">\n          <h3>Time remaining: {this.timer}s</h3>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players,\n    playerWords: state.worddrag.playerWords\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateCurrentPlayerScore,\n    getGameDetails,\n    updateCurrentPlayerWords\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDrag);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './WordDrag.less';\nimport {createGame, findGame} from '../actions'\n\nexport class WordDragCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  createGame(size) {\n    let gameName = document.querySelector('#create-game-name').value\n    let playerName = document.querySelector('#create-game-player').value\n    this.props.createGame(size, gameName, playerName);\n  }\n\n  joinGame() {\n    let gameName = document.querySelector('#join-game-name').value\n    let playerName = document.querySelector('#join-game-player').value\n    this.props.findGame(gameName, playerName);\n  }\n\n  render() {\n    let {error} = this.props;\n\n    return (\n      <React.Fragment>\n        <h1>Word Drag</h1>\n        <div id=\"create-game\">\n          <h3>Create Game</h3>\n          Enter game name: <input id=\"create-game-name\"></input>\n          <br />Enter player name: <input id=\"create-game-player\"></input>\n          <br />\n          <button onClick={() => this.createGame(20)}>Create Game</button>\n        </div>\n        <br />\n        <br />\n        <div id=\"join-game\">\n          <h3>Join Game</h3>\n          Enter game name: <input id=\"join-game-name\"></input>\n          <br />Enter player name: <input id=\"join-game-player\"></input>\n          <br />\n          <button onClick={() => this.joinGame()}>Join Game</button>\n        </div>\n        {\n          error &&\n          <div id=\"game-error\">\n            <p style={{\"color\": \"red\"}}>Game Not Found!</p>\n          </div>\n        }\n        {/* <form className=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" />\n          </div>\n          <div class=\"form-group form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n            <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        </form> */}\n      </React.Fragment>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.worddrag.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createGame,\n    findGame\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDragCreate);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as _ from 'underscore';\nimport {startGame, getGameDetails} from '../actions'\nimport './WordDrag.less';\nimport { Grid } from './Grid';\n\nexport class Lobby extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.startGame = this.startGame.bind(this);\n\n    this.sampleGrid = []\n  }\n\n  componentDidMount() {\n    this.sampleGrid = [\n      ['.', 'S', '.', '.', '.'],\n      ['.', 'W', 'E', 'R', 'E'],\n      ['.', 'O', '.', 'A', '.'],\n      ['D', 'R', 'A', 'G', '.'],\n      ['.', 'D', '.', 'E', '.']\n    ]\n    this.sampleGrid.forEach((line) => {\n      line.forEach((char, ind) => {\n        if(char === '.') {\n          line[ind] = (String.fromCharCode('A'.charCodeAt() + _.random(0, 25)));\n        }\n      })\n    })\n    setInterval(() => {\n      this.props.getGameDetails(this.props.gameId);\n    }, 1000)\n  }\n\n  startGame() {\n    this.props.startGame(this.props.gameId);\n  }\n\n  render() {\n    const {players, gameName, curPlayerName} = this.props;\n    let playerInd = _.findIndex(players, {\n      playerName: curPlayerName\n    })\n\n    return (\n      <div id=\"lobby\">\n        <h1>Word Drag</h1>\n        <h3>Game Name: {gameName}</h3>\n        <div className=\"player-list\">\n          <h3>Players joined: </h3>\n          <ul>\n          {\n            players.length > 0 &&\n            players.map((player) => {\n              return <li>{player.playerName} {player.isAdmin && ` (Admin)`}</li>\n            })\n          }\n          </ul>\n        </div>\n        {\n          players[playerInd].isAdmin === true\n          ? <button onClick={this.startGame}>Start Game</button>\n          : <h3>Wait for admin to start the game!</h3>\n        }\n        <hr />\n        <div className=\"col-md-12 instructions\">\n          <div className=\"col-md-7 left\">\n            <h3>How to play: </h3>\n            <ul>\n              <li>Once game starts, a <b>20x20</b> grid of letters will be displayed</li>\n              <li>Drag the letters to find words</li>\n              <li>There are 2 ways to drag letters to form words:\n                <ul style={{marginLeft: \"10px\"}}>\n                  <li>Start dragging from first letter and stop at last letter</li>\n                  <li>Click on first letter, move the cursor to last letter and click on last letter (recommended)</li>\n                </ul>\n                Try it on the sample grid on the right\n              </li>\n              <li><a href='https://en.wikipedia.org/wiki/Scrabble_letter_distributions' target='_blank'>Scrabble letter scores</a> will be used for calculating the score for each word found</li>\n              <li>Try to score the maximum points in <b>120 seconds</b>!!</li>\n            </ul>\n          </div>\n          <div className=\"col-md-5 right\">\n            <h3>Sample grid: </h3>\n            {\n              this.sampleGrid && this.sampleGrid.length > 0 && \n              <div style={{\"margin\": \"10px auto\"}}>\n                <Grid grid={this.sampleGrid} storeScore={false} />\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameId: state.worddrag.gameId,\n    gameName: state.worddrag.gameName,\n    curPlayerName: state.worddrag.curPlayerName,\n    players: state.worddrag.players\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    startGame,\n    getGameDetails\n  },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Lobby);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './WordDrag.less';\nimport WordDrag from './WordDrag';\nimport WordDragCreate from './WordDragCreate';\nimport Lobby from './Lobby';\n\nexport class WordDragController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {grid, gameStarted} = this.props;\n\n    return (\n      <div id=\"worddrag-game\">\n        {\n          (grid && grid.length > 0) ?\n          (gameStarted ? <WordDrag /> : <Lobby />) :\n          <WordDragCreate />\n        }\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    grid: state.worddrag.grid,\n    gameStarted: state.worddrag.gameStarted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({},\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordDragController);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './lib/Store';\n\nconst is_dev = process.env.NODE_ENV === 'development';\nlet baseUrl = '';\nbaseUrl = is_dev ? `http://localhost:4000` : `${window.location.protocol}//${window.location.host}`;\n\nReactDOM.render(\n    <Provider store={store}>\n         <App baseUrl={baseUrl} />\n    </Provider>, \n    document.getElementById('root')\n)\n","import React, {Component} from 'react';\nimport { Provider } from 'react-redux';\nimport store from './lib/Store';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport WordDragController from './modules/WordDragController';\n\nclass App extends Component {\n  componentWillMount() {\n    store.dispatch({\n      type: \"UPDATE_BASE_URL\",\n      payload: this.props.baseUrl\n    })\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <ToastContainer\n          className=\"ewp-toast-container\"\n          position={toast.POSITION.TOP_CENTER}\n        />\n        <div className=\"App\">\n          <WordDragController />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}